  AWSTemplateFormatVersion: '2010-09-09'
  Transform: AWS::Serverless-2016-10-31
  Description: AWS Serverless Quarkus HTTP - quarkus-workshop-1-1.0.0-SNAPSHOT
  Globals:
    Api:
      EndpointConfiguration: REGIONAL
      BinaryMediaTypes:
        - "*/*"

  Resources:
    funqyHttpApi:
      Type: AWS::Serverless::HttpApi
      Properties:
        Auth:
          DefaultAuthorizer: BasicLambdaAuthorizer
          Authorizers:
            BasicLambdaAuthorizer:
              AuthorizerPayloadFormatVersion: 2.0
              EnableSimpleResponses: true
              FunctionArn: !GetAtt funqyBasicAuthorizr.Arn
              FunctionInvokeRole: !GetAtt funqyApiGatewayInvokeLambdaRole.Arn
              Identity:
                Headers:
                  - Authorization

    funqyBookFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: io.quarkus.amazon.lambda.runtime.QuarkusStreamHandler::handleRequest
        Runtime: java11
        CodeUri: ../target/function.zip
        MemorySize: 1024
        Policies:
          - AWSLambdaBasicExecutionRole
          - AmazonDynamoDBFullAccess
        Timeout: 30
        Events:
          HttpApiEvent:
            Type: HttpApi
            Properties:
              ApiId: !Ref funqyHttpApi

    funqyBasicAuthorizr:
      Type: AWS::Serverless::Function
      Properties:
        Handler: basicAuthorizr.handler
        Runtime: nodejs12.x
        CodeUri: ../js

    funqyApiGatewayInvokeLambdaRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: apigateway.amazonaws.com
              Action: 'sts:AssumeRole'
        Policies:
          - PolicyName: funqyApiGatewayInvokeLambdaRole
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action: "lambda:InvokeFunction"
                  Resource: '*'

    funqyQuarkusBooksDynamoDb:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: dasniko-funqy-books
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

  Outputs:
    funqyHttpApi:
      Value: !Sub 'https://${funqyHttpApi}.execute-api.${AWS::Region}.amazonaws.com/'
      Export:
        Name: dasnikoFunqyHttpApi
